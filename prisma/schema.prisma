// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String           @id @default(cuid())
  name            String?
  email           String?          @unique
  emailVerified   DateTime?
  password        String?
  image           String?
  accounts        Account[]
  sessions        Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Visitors {
  id           String      @id @unique @default(cuid())
  name         String      @default(uuid())
  email        String?     @unique
  phoneNumber  String?     @unique
  visitCount   Int
  lastVisit    DateTime
  hasSentSms   Boolean?    @default(false)
  sentSmsCount Int?
  sms          Sms[]
  questions    Questions[]
  answers      Answers[]
  createdAt    DateTime    @default(now())
}

model Questions {
  id         String   @id @unique @default(cuid())
  content    String
  answer     Answers? 
  visitor    Visitors @relation(fields: [visitorsId], references: [id])
  createdAt  DateTime @default(now())
  visitorsId String
}

model Answers {
  id          String    @id @unique @default(cuid())
  content     String
  question    Questions @relation(fields: [questionsId], references: [id])
  visitor     Visitors  @relation(fields: [visitorsId], references: [id])
  createdAt   DateTime  @default(now())
  questionsId String @unique
  visitorsId  String
}

model Sms {
  id         String   @id @unique @default(cuid())
  createdAt  DateTime @default(now())
  dateSent   DateTime
  content    String
  visitor    Visitors @relation(fields: [visitorsId], references: [id])
  visitorsId String
}


